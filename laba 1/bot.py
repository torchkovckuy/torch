import random
import telebot

bot = telebot.TeleBot('7902473274:AAHknkD97QtQz7Rc-v3FAGfpwtnZ7MxGaKA')

CARDS = {
    "–ì–∏–≥–∞–Ω—Ç": 5,
    "–ü–µ–∫–∞": 7,
    "–í–µ–¥—å–º–∞": 5,
    "–ü—Ä–∏–Ω—Ü": 5,
    "–î—Ä–∞–∫–æ–Ω—á–∏–∫": 4,
    "–ú–µ—Ç–∫–∞": 3,
    "–û–≥–Ω–µ–Ω–Ω—ã–π –¥—É—Ö": 1,
    "–õ—É–∫": 3,
    "–®–∞—Ä": 4,
    "–í–∞–ª—å–∫–∏—Ä–∏—è": 4,
    "–†—ã—Ü–∞—Ä—å": 3,
    "–ú—É—à–∫–µ—Ç—ë—Ä": 4,
    "–ú–∏–Ω–∏-–ü–ï–ö–ö–ê": 4,
    "–ú–µ–≥–∞-—Ä—ã—Ü–∞—Ä—å": 7,
    "–ü—Ä–∏–Ω—Ü–µ—Å—Å–∞": 3,
    "–õ–µ–¥—è–Ω–æ–π –¥—É—Ö": 1,
    "–°–∫–µ–ª–µ—Ç—ã": 1,
    "–ì–æ–±–ª–∏–Ω—Å–∫–∏–π –±–æ—á–æ–Ω–æ–∫": 2,
    "–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä": 4
}

META_DECKS = {
    "–ì–∏–≥–∞–Ω—Ç + –í–µ–¥—å–º–∞": ["–ì–∏–≥–∞–Ω—Ç", "–í–µ–¥—å–º–∞", "–ú—É—à–∫–µ—Ç—ë—Ä", "–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä", "–í–∞–ª—å–∫–∏—Ä–∏—è", "–õ—É–∫", "–ì–æ–±–ª–∏–Ω—Å–∫–∏–π –±–æ—á–æ–Ω–æ–∫",
                        "–õ–µ–¥—è–Ω–æ–π –¥—É—Ö"],
    "–ú–µ–≥–∞-—Ä—ã—Ü–∞—Ä—å + –ü—Ä–∏–Ω—Ü–µ—Å—Å–∞": ["–ú–µ–≥–∞-—Ä—ã—Ü–∞—Ä—å", "–ü—Ä–∏–Ω—Ü–µ—Å—Å–∞", "–ú–∏–Ω–∏-–ü–ï–ö–ö–ê", "–®–∞—Ä", "–ú–µ—Ç–∫–∞", "–°–∫–µ–ª–µ—Ç—ã", "–û–≥–Ω–µ–Ω–Ω—ã–π –¥—É—Ö",
                                "–ì–æ–±–ª–∏–Ω—Å–∫–∏–π –±–æ—á–æ–Ω–æ–∫"],
    "–ü–µ–∫–∞ + –î—Ä–∞–∫–æ–Ω—á–∏–∫": ["–ü–µ–∫–∞", "–î—Ä–∞–∫–æ–Ω—á–∏–∫", "–ü—Ä–∏–Ω—Ü", "–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä", "–†—ã—Ü–∞—Ä—å", "–õ—É–∫", "–õ–µ–¥—è–Ω–æ–π –¥—É—Ö", "–ú–µ—Ç–∫–∞"]
}

TOP_PLAYERS = [
    "1. Mohamed Light (8234 trophies)",
    "2. Anaban (8215 trophies)",
    "3. Surgical Goblin (8199 trophies)",
    "4. iAmJP (8187 trophies)",
    "5. Mugi (8175 trophies)",
    "6. Richie (8169 trophies)",
    "7. YersonCz (8162 trophies)",
    "8. DiegoB (8158 trophies)",
    "9. Vulkan (8153 trophies)",
    "10. KFC | ZIMMY (8149 trophies)"
]

YOUTUBERS = [
    "üîπ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä Kplay (https://www.youtube.com/c/KplayCR)",
    "üîπ Clash with Ash (https://www.youtube.com/c/ClashwithAsh)",
    "üîπ Chief Pat (https://www.youtube.com/c/ChiefPat)",
    "üîπ Orange Juice (https://www.youtube.com/c/OrangeJuice)",
    "üîπ Coltonw83 (https://www.youtube.com/c/Coltonw83)",
    "üîπ Clash Royale –†–æ—Å—Å–∏—è (https://www.youtube.com/c/ClashRoyaleRussiaOfficial)"
]

CARD_WIN_RATES = {
    "–ú–µ–≥–∞-—Ä—ã—Ü–∞—Ä—å": "53.2%",
    "–í–µ–¥—å–º–∞": "48.7%",
    "–ì–∏–≥–∞–Ω—Ç": "51.4%",
    "–ü—Ä–∏–Ω—Ü–µ—Å—Å–∞": "49.8%",
    "–ü–µ–∫–∞": "52.1%",
    "–ú—É—à–∫–µ—Ç—ë—Ä": "50.3%",
    "–û–≥–Ω–µ–Ω–Ω—ã–π –¥—É—Ö": "47.9%",
    "–õ—É–∫": "49.5%"
}

def create_keyboard():
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('üé≤ –°–ª—É—á–∞–π–Ω–∞—è –∫–æ–ª–æ–¥–∞', 'üèÜ –¢–æ–ø–æ–≤—ã–µ –∫–æ–ª–æ–¥—ã')
    markup.row('üîç –ö–æ–ª–æ–¥–∞ –ø–æ –∫–∞—Ä—Ç–µ', 'üèüÔ∏è –ö–æ–ª–æ–¥–∞ –ø–æ–¥ –∞—Ä–µ–Ω—É')
    markup.row('üìä –í–∏–Ω—Ä–µ–π—Ç –∫–∞—Ä—Ç', 'üëë –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤')
    markup.row('üé• –Æ—Ç—É–±–µ—Ä—ã –ø–æ CR', 'üß™ –°—á–µ—Ç—á–∏–∫ —ç–ª–∏–∫—Å–∏—Ä–∞')
    return markup

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(
        message.chat.id,
        "üéÆ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è Clash Royale —Å –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=create_keyboard()
    )

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    text = message.text

    if text == 'üé≤ –°–ª—É—á–∞–π–Ω–∞—è –∫–æ–ª–æ–¥–∞':
        deck = random.sample(list(CARDS.keys()), 8)
        response = "üîÆ –°–ª—É—á–∞–π–Ω–∞—è –∫–æ–ª–æ–¥–∞:\n\n" + "\n".join(f"‚ñ™Ô∏è {card} ({CARDS[card]} —ç–ª–∏–∫—Å–∏—Ä–∞)" for card in deck)
        avg_cost = sum(CARDS[card] for card in deck) / 8
        response += f"\n\n–°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {avg_cost:.1f} —ç–ª–∏–∫—Å–∏—Ä–∞"
        bot.send_message(message.chat.id, response)

    elif text == 'üèÜ –¢–æ–ø–æ–≤—ã–µ –∫–æ–ª–æ–¥—ã':
        response = "üèÜ –¢–æ–ø–æ–≤—ã–µ –∫–æ–ª–æ–¥—ã:\n\n"
        for name, deck in META_DECKS.items():
            avg_cost = sum(CARDS[card] for card in deck) / 8
            response += f"üîπ {name} (–°—Ä–µ–¥. —Å—Ç–æ–∏–º–æ—Å—Ç—å: {avg_cost:.1f}):\n"
            response += "\n".join(f"‚ñ™Ô∏è {card} ({CARDS[card]} —ç–ª–∏–∫—Å–∏—Ä–∞)" for card in deck) + "\n\n"
        bot.send_message(message.chat.id, response)

    elif text == 'üîç –ö–æ–ª–æ–¥–∞ –ø–æ –∫–∞—Ä—Ç–µ':
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ì–∏–≥–∞–Ω—Ç):",
                               reply_markup=telebot.types.ReplyKeyboardRemove())
        bot.register_next_step_handler(msg, process_card_request)

    elif text == 'üèüÔ∏è –ö–æ–ª–æ–¥–∞ –ø–æ–¥ –∞—Ä–µ–Ω—É':
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∞—Ä–µ–Ω—ã (–æ—Ç 1 –¥–æ 16):",
                               reply_markup=telebot.types.ReplyKeyboardRemove())
        bot.register_next_step_handler(msg, process_arena_request)

    elif text == 'üìä –í–∏–Ω—Ä–µ–π—Ç –∫–∞—Ä—Ç':
        response = "üìä –í–∏–Ω—Ä–µ–π—Ç –∫–∞—Ä—Ç (–ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ):\n\n"
        for card, rate in CARD_WIN_RATES.items():
            response += f"{card}: {rate} (—Å—Ç–æ–∏–º–æ—Å—Ç—å: {CARDS.get(card, '?')})\n"
        bot.send_message(message.chat.id, response)

    elif text == 'üëë –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤':
        response = "üëë –¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤ –≤ –º–∏—Ä–µ:\n\n" + "\n".join(TOP_PLAYERS)
        bot.send_message(message.chat.id, response)

    elif text == 'üé• –Æ—Ç—É–±–µ—Ä—ã –ø–æ CR':
        response = "üé• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–µ —é—Ç—É–±–µ—Ä—ã –ø–æ Clash Royale:\n\n" + "\n".join(YOUTUBERS)
        bot.send_message(message.chat.id, response)

    elif text == 'üß™ –°—á–µ—Ç—á–∏–∫ —ç–ª–∏–∫—Å–∏—Ä–∞':
        msg = bot.send_message(message.chat.id,
                               "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∫–æ–ª–æ–¥—É –∏–∑ 8 –∫–∞—Ä—Ç (–∫–∞–∂–¥—É—é —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):",
                               reply_markup=telebot.types.ReplyKeyboardRemove())
        bot.register_next_step_handler(msg, calculate_elixir_cost)

    else:
        bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è", reply_markup=create_keyboard())

def process_card_request(message):
    card = message.text.strip()
    if card not in CARDS:
        bot.send_message(message.chat.id, "‚ùå –¢–∞–∫–æ–π –∫–∞—Ä—Ç—ã –Ω–µ—Ç –≤ –±–∞–∑–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
                         reply_markup=create_keyboard())
        return

    other_cards = [c for c in CARDS.keys() if c != card]
    deck = [card] + random.sample(other_cards, 7)
    avg_cost = sum(CARDS[c] for c in deck) / 8
    response = f"üÉè –ö–æ–ª–æ–¥–∞ —Å –∫–∞—Ä—Ç–æ–π {card} ({CARDS[card]} —ç–ª–∏–∫—Å–∏—Ä–∞):\n\n"
    response += "\n".join(f"‚ñ™Ô∏è {c} ({CARDS[c]} —ç–ª–∏–∫—Å–∏—Ä–∞)" for c in deck)
    response += f"\n\n–°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {avg_cost:.1f} —ç–ª–∏–∫—Å–∏—Ä–∞"
    bot.send_message(message.chat.id, response, reply_markup=create_keyboard())


def process_arena_request(message):
    try:
        arena = int(message.text)
        if 1 <= arena <= 16:
            deck = random.sample(list(CARDS.keys()), 8)
            avg_cost = sum(CARDS[card] for card in deck) / 8
            response = f"üèüÔ∏è –ö–æ–ª–æ–¥–∞ –¥–ª—è –∞—Ä–µ–Ω—ã {arena}:\n\n"
            response += "\n".join(f"‚ñ™Ô∏è {card} ({CARDS[card]} —ç–ª–∏–∫—Å–∏—Ä–∞)" for card in deck)
            response += f"\n\n–°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {avg_cost:.1f} —ç–ª–∏–∫—Å–∏—Ä–∞"
            bot.send_message(message.chat.id, response, reply_markup=create_keyboard())
        else:
            bot.send_message(message.chat.id, "‚ùå –ê—Ä–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 1 –¥–æ 16.", reply_markup=create_keyboard())
    except ValueError:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 16.", reply_markup=create_keyboard())


def calculate_elixir_cost(message):
    try:
        if "," in message.text:
            deck = [card.strip() for card in message.text.split(",")]
        else:
            deck = [card.strip() for card in message.text.split("\n")]

        deck = [card for card in deck if card]  # –£–¥–∞–ª—è–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

        if len(deck) != 8:
            raise ValueError

        total_elixir = 0
        unknown_cards = []
        valid_cards = []

        for card in deck:
            if card in CARDS:
                total_elixir += CARDS[card]
                valid_cards.append(card)
            else:
                unknown_cards.append(card)

        avg_elixir = total_elixir / 8

        if avg_elixir > 4.0:
            deck_type = "–¢—è–∂–µ–ª–∞—è (–∫–æ–Ω—Ç—Ä–æ–ª—å/–±–µ–π–Ω)"
        elif avg_elixir > 3.3:
            deck_type = "–°—Ä–µ–¥–Ω—è—è (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è)"
        else:
            deck_type = "–ë—ã—Å—Ç—Ä–∞—è (—Ü–∏–∫–ª–æ–≤–∞—è)"

        response = f"üßÆ –°—á–µ—Ç—á–∏–∫ —ç–ª–∏–∫—Å–∏—Ä–∞:\n\n"
        response += f"–°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {avg_elixir:.1f}\n"
        response += f"–¢–∏–ø –∫–æ–ª–æ–¥—ã: {deck_type}\n\n"
        response += "–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞—Ä—Ç:\n"

        for card in valid_cards:
            response += f"{card}: {CARDS[card]} —ç–ª–∏–∫—Å–∏—Ä–∞\n"

        if unknown_cards:
            response += f"\n‚ö† –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–∞—Ä—Ç—ã: {', '.join(unknown_cards)}"

        bot.send_message(message.chat.id, response, reply_markup=create_keyboard())

    except:
        bot.send_message(message.chat.id,
                         "‚ùå –û—à–∏–±–∫–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–æ–≤–Ω–æ 8 –∫–∞—Ä—Ç, –∫–∞–∂–¥—É—é —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.",
                         reply_markup=create_keyboard())


print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.infinity_polling()